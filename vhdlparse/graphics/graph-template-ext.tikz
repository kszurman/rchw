\tikzset{
 tip/.style={->,shorten >=1pt},
  block/.style = {
    draw, fill=blue!20, rectangle,
    minimum height=3em, minimum width=6em
  },
  output/.style = {
    coordinate},
  point/.style = {
    coordinate
  },
  hw/.style = {
            draw,
            rounded corners=1pt},
	entity/.style = {},
	comp_inst/.style = {font=\small},
	if_in/.style = {
	    draw,
	    minimum height=12pt,
	    minimum width=7cm, %30pt,
	    font=\scriptsize},
	if_out/.style = {
	    draw,
	    minimum height=12pt,
	    minimum width=7cm, %30pt,
	    font=\scriptsize},
	>=open triangle 60,
  entity-frame/.style = {rounded corners=1pt}
}


\begin{tikzpicture}[]
%\draw[help lines](-4,-2) grid (4,2);

%% entity name
\node (top-entity) [entity] at ($entity_x,$entity_y) {$entity};

%% input ports
\matrix(in_ports) [] 
	at ($in_ports_x,0)
{
	%% \node(in_1_port) [left=1cm] {}; & \node(nix) [minimum width=20pt] {}; & \node(in_1_clk) [if_in] {Clk}; \\
  %% \node(in_2_port) [left=1cm] {}; & \node(nix) [minimum width=20pt] {}; & \node(in_2_enable) [if_in] {Enable}; \\
  %% \node(in_3_port) [left=1cm] {}; & \node(nix) [minimum width=20pt] {}; & \node(in_3_data) [if_in] {Data}; \\
  ${in_port_s}
};

%% \draw[>-] (in_1_port.west) -- (in_1_clk);
%% \draw[>-] (in_2_port.west) -- (in_2_enable);
%% \draw[>-] (in_3_port.west) -- (in_3_data);
${in_port_cons}

%% output port
\matrix(out_ports) 
 [
% 	matrix of nodes,
% 	nodes in empty cells,
% 	nodes={draw}
]
	at ($out_ports_x,0)
{
	%% \node(out_1_o_out) [if_out] {$$O_Out$$}; & \node(nix) [minimum width=20pt] {}; & \node(out_1_port) [left=1cm] {}; \\
  %% \node(out_2_outinv) [if_in] {OutInv}; & \node(nix) [minimum width=20pt] {}; & \node(out_2_port) [left=1cm] {}; \\
${out_port_s}
	& &  \\
};

%% \draw[->] (out_1_o_out) -- (out_1_port.east);
%% \draw[->] (out_2_outinv) -- (out_2_port.east);
${out_port_cons}

%% components, signals, processes
%\node(inst_1) [comp_inst] at(0, 0) {Comp inst 1};

%% \matrix(in_ports) [] 
%% 	at (0,-1)
%% {
%% 	\node(inst_in_1_clk) [if_in] {Clk}; & \node(inst_out_1_o_out) [if_out] {$$O_Out$$}; \\
%%   \node(inst_in_2_enable) [if_in] {Enable}; & \node(inst_out_2_outinv) [if_out] {OutInv}; \\
%%   \node(inst_in_3_data) [if_in] {Data}; & \\
%%   \\
%% };

%% instances
${instances_s}

%% assignments / signals
%\node (sig_o_osz) [if_in,] at(0,-2.5) {o\_osz\_1 and o\_osz\_2};
${assignments_s}

%% from input ports
%\draw[->] (in_1_blk.east) .. controls +(0.5,0.) and +(-0.5,-0.) .. (inst1_in_1_blk.west);
%\draw[->] (in_2_blk.east) .. controls +(0.5,0.) and +(-0.5,-0.) .. (inst1_in_2_blk.west);
${conn_from_in}
%\draw[->] (in_3_blk.east) .. controls +(0.5,0.) and +(-0.5,-0.) .. (inst1_in_3_blk.west);
%% to signals
%\draw[->] (inst1_out_1_blk.east) .. controls +(1,0) and +(-1, 0) .. (sig_2_blk.west);
%\draw[->] (inst_out_2_outinv.east) .. controls +(1,0) and +(-1, 0) .. (sig_2.west);
${conn_to_sig}
%% to output ports
%\draw[->] (sig_2_blk.east)  .. controls +(0.5,0.) and +(-0.5,-0.) .. (out_1_blk.west);
${conn_to_out}

%% frames
%\draw [entity-frame, thick] (-3.5,1.5) rectangle (4,-3);
%\draw [] (-1,0.4) rectangle (1,-1.7);

\end{tikzpicture}
